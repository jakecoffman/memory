{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Card.svelte","../../src/Modal.svelte","../../src/Game.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<style>\r\n    .container {\r\n        position: relative;\r\n        height: 100%;\r\n        width: 100%;\r\n        perspective: 600px;\r\n    }\r\n\r\n    .card {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: 1px solid gray;\r\n        border-radius: 4px;\r\n        box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0,0,0,.12);\r\n    }\r\n\r\n    .card.front {\r\n        background-color: white;\r\n    }\r\n\r\n    .card.back {\r\n        background-color: lightblue;\r\n        color: #636363;\r\n        line-height: 21vmin;\r\n        font-size: 21vmin;\r\n        text-align: center;\r\n        vertical-align: center;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export let isFlipped = false\r\n\r\n    function turn(node, {\r\n        delay = 0,\r\n        duration = 500\r\n    }) {\r\n        return {\r\n            delay,\r\n            duration,\r\n            css: (t, u) => `transform: rotateY(${1 - (u * 180)}deg); opacity: ${1 - u};`\r\n        };\r\n    }\r\n</script>\r\n\r\n<div class=\"container\">\r\n    {#if isFlipped}\r\n    <div class=\"card front\" transition:turn>\r\n        <slot/>\r\n    </div>\r\n    {:else}\r\n    <div class=\"card back\" transition:turn>\r\n        <slot/>\r\n    </div>\r\n    {/if}\r\n</div>\r\n","<script>\r\n    import { createEventDispatcher, onDestroy } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n    const close = () => dispatch('close');\r\n\r\n    let modal;\r\n</script>\r\n\r\n<div class=\"modal-background\" on:click={close}></div>\r\n\r\n<div class=\"modal\" role=\"dialog\" aria-modal=\"true\" bind:this={modal}>\r\n    <slot name=\"header\"></slot>\r\n    <slot></slot>\r\n    <div class=\"actions\">\r\n        <button on:click={close}>shuffle and restart</button>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .modal-background {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: rgba(0,0,0,0.3);\r\n    }\r\n\r\n    .modal {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        width: calc(100vw - 4em);\r\n        max-width: 32em;\r\n        max-height: calc(100vh - 4em);\r\n        overflow: auto;\r\n        transform: translate(-50%,-50%);\r\n        padding: .25rem 1rem;\r\n        border-radius: 0.2em;\r\n        background: white;\r\n    }\r\n\r\n    button {\r\n        display: block;\r\n        font-size: 2em;\r\n        padding: .25em .5em;\r\n    }\r\n\r\n    .actions {\r\n        display: flex;\r\n        justify-content: end;\r\n    }\r\n</style>\r\n","<script>\r\n\timport Dog from \"./icons/Dog.svelte\";\r\n\timport Card from \"./Card.svelte\";\r\n\timport Cat from \"./icons/Cat.svelte\";\r\n\timport Fish from \"./icons/Fish.svelte\";\r\n\timport Bird from \"./icons/Bird.svelte\";\r\n\timport Lion from \"./icons/Lion.svelte\";\r\n\timport Snake from \"./icons/Snake.svelte\";\r\n\timport Chicken from \"./icons/Chicken.svelte\";\r\n\timport Monkey from \"./icons/Monkey.svelte\";\r\n\timport Mouse from \"./icons/Mouse.svelte\";\r\n\timport {onDestroy, onMount} from \"svelte\";\r\n\timport Modal from \"./Modal.svelte\";\r\n\r\n\t/* Randomize array in-place using Durstenfeld shuffle algorithm */\r\n\tfunction shuffleArray(array) {\r\n\t\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\tconst temp = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\texport let numPlayers = 1\r\n\r\n\tlet curPlayer = 0\r\n\tlet scores = []\r\n\tfor (let i = 0; i < numPlayers; i++) {\r\n\t\tscores.push(0)\r\n\t}\r\n\tlet waiting = false\r\n\tlet idx = 0\r\n\tlet board = []\r\n\tlet selected = []\r\n\r\n\tfunction reset() {\r\n\t\tboard = [\r\n\t\t\t{image: Dog, id: idx++},\r\n\t\t\t{image: Dog, id: idx++},\r\n\t\t\t{image: Cat, id: idx++},\r\n\t\t\t{image: Cat, id: idx++},\r\n\t\t\t{image: Fish, id: idx++},\r\n\t\t\t{image: Fish, id: idx++},\r\n\t\t\t{image: Bird, id: idx++},\r\n\t\t\t{image: Bird, id: idx++},\r\n\t\t\t{image: Lion, id: idx++},\r\n\t\t\t{image: Lion, id: idx++},\r\n\t\t\t{image: Snake, id: idx++},\r\n\t\t\t{image: Snake, id: idx++},\r\n\t\t\t{image: Monkey, id: idx++},\r\n\t\t\t{image: Monkey, id: idx++},\r\n\t\t\t{image: Chicken, id: idx++},\r\n\t\t\t{image: Chicken, id: idx++},\r\n\t\t\t{image: Mouse, id: idx++},\r\n\t\t\t{image: Mouse, id: idx++},\r\n\t\t]\r\n\t\tshuffleArray(board)\r\n\t\tselected = []\r\n\t\twaiting = false\r\n\t}\r\n\r\n\treset()\r\n\r\n\tfunction pick(card) {\r\n\t\tif (!board.find(c => !c.flipped)) {\r\n\t\t\treturn reset()\r\n\t\t}\r\n\t\tif (waiting) {\r\n\t\t\treturn next()\r\n\t\t}\r\n\t\tif (card.flipped) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!board.find(c => !c.flipped)) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tcard.flipped = true\r\n\t\tselected = [...selected, card]\r\n\r\n\t\tif (selected.length === 2) {\r\n\t\t\tif (selected[0].image === selected[1].image) {\r\n\t\t\t\tscores[curPlayer] += 1\r\n\t\t\t\tscores = scores\r\n\t\t\t\tselected = []\r\n\t\t\t} else {\r\n\t\t\t\twaiting = true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tboard = board\r\n\t}\r\n\r\n\tfunction next() {\r\n\t\tcurPlayer += 1\r\n\t\tif (curPlayer >= numPlayers) {\r\n\t\t\tcurPlayer = 0\r\n\t\t}\r\n\t\twaiting = false\r\n\t\tselected.forEach(c => c.flipped = false)\r\n\t\tselected = []\r\n\t\tboard = board\r\n\t}\r\n\r\n\tconst letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\r\n\r\n\tlet listener\r\n\tonMount(() => {\r\n\t\tlistener = window.addEventListener('keypress', e => {\r\n\t\t\tconst i = letters.findIndex(l => l === e.key.toUpperCase())\r\n\t\t\tpick(board[i])\r\n\t\t})\r\n\t})\r\n\r\n\tonDestroy(() => {\r\n\t\twindow.removeEventListener('keypress', listener)\r\n\t})\r\n\r\n\t$: gameOver = board.filter(card => !card.flipped).length === 0\r\n</script>\r\n\r\n<main>\r\n\t{#each board as card, index}\r\n\t<a on:mousedown|preventDefault={() => pick(card)} on:touchstart|preventDefault={() => pick(card)}>\r\n\t\t<Card isFlipped={card.flipped}>\r\n\t\t\t{#if card.flipped}\r\n\t\t\t<svelte:component this={card.image}/>\r\n\t\t\t{:else}\r\n\t\t\t{letters[index]}\r\n\t\t\t{/if}\r\n\t\t</Card>\r\n\t</a>\r\n\t{/each}\r\n</main>\r\n\r\n<aside>Player {curPlayer+1} - Score: {scores[curPlayer]}</aside>\r\n\r\n{#if gameOver}\r\n\t<Modal on:close=\"{() => reset()}\" class=\"modal\">\r\n\t\t<h2 slot=\"header\">\r\n\t\t\tGame Over\r\n\t\t</h2>\r\n\r\n\t\t<ul>\r\n\t\t{#each scores as score, index}\r\n\t\t\t<li>Player {index+1} - {score}</li>\r\n\t\t{/each}\r\n\t\t</ul>\r\n\t</Modal>\r\n{/if}\r\n\r\n<footer>\r\n\tIcons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\r\n</footer>\r\n\r\n<style>\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-content: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\ta {\r\n\t\twidth: 23vmin;\r\n\t\theight: 23vmin;\r\n\t\tmargin-right: 1rem;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\r\n\taside {\r\n\t\tposition: fixed;\r\n\t\tright: 10px;\r\n\t\tbottom: 10px;\r\n\t}\r\n\r\n\tfooter {\r\n\t\tmargin-top: -1rem;\r\n\t\topacity: .8;\r\n\t\tfont-size: .75rem;\r\n\t}\r\n\r\n\th1 {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 4em;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\th2 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 2em;\r\n\t\tcolor: #3e3e3e;\r\n\t\ttext-align: center;\r\n\t\tborder-bottom: 1px solid #c6c5c5;\r\n\t\tpadding-bottom: 1rem;\r\n\t}\r\n\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tfont-size: 2em;\r\n\t}\r\n\r\n</style>\r\n","<script>\r\n    import Game from \"./Game.svelte\";\r\n\r\n    let playing = false;\r\n    let numPlayers\r\n\r\n    // warn before leaving\r\n    window.onbeforeunload = () => true;\r\n</script>\r\n\r\n{#if !playing}\r\n    <h1>Memory</h1>\r\n\r\n    <h2>Choose players</h2>\r\n\r\n    <div>\r\n        <button on:click={() => numPlayers = 1} class:selected={numPlayers === 1}>1</button>\r\n        <button on:click={() => numPlayers = 2} class:selected={numPlayers === 2}>2</button>\r\n        <button on:click={() => numPlayers = 3} class:selected={numPlayers === 3}>3</button>\r\n        <button on:click={() => numPlayers = 4} class:selected={numPlayers === 4}>4</button>\r\n    </div>\r\n\r\n    <span>\r\n        <button on:click={() => playing = true}>PLAY</button>\r\n    </span>\r\n{:else}\r\n    <Game {numPlayers}/>\r\n{/if}\r\n\r\n<style>\r\n    h1 {\r\n        font-size: 4rem;\r\n    }\r\n\r\n    h2 {\r\n        font-size: 2rem;\r\n    }\r\n\r\n    .selected {\r\n        background: #adadff;\r\n    }\r\n\r\n    div {\r\n        display: grid;\r\n        grid-template-columns: repeat(4, 1fr);\r\n        grid-gap: 1rem;\r\n    }\r\n\r\n    span {\r\n        display: flex;\r\n        align-content: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    button {\r\n        border-radius: 4px;\r\n        padding: 1rem 2rem;\r\n        font-size: 4rem;\r\n    }\r\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","ownerDocument","add","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","$$","pop","callback","has","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","fulfill","loop","[object Object]","then","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","index","splice","turn","u","isFlipped","createEventDispatcher","modal","image","flipped","numPlayers","curPlayer","scores","waiting","idx","board","selected","reset","Dog","id","Cat","Fish","Bird","Lion","Snake","Monkey","Chicken","Mouse","array","j","floor","random","temp","shuffleArray","pick","card","find","letters","listener","findIndex","toUpperCase","onDestroy","gameOver","playing","onbeforeunload","body"],"mappings":"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"}