{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Card.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Dog from \"./icons/Dog.svelte\";\n\timport Card from \"./Card.svelte\";\n\timport Cat from \"./icons/Cat.svelte\";\n\timport Fish from \"./icons/Fish.svelte\";\n\timport Bird from \"./icons/Bird.svelte\";\n\n\t/* Randomize array in-place using Durstenfeld shuffle algorithm */\n\tfunction shuffleArray(array) {\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\tconst temp = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n\n\tlet waiting = false\n\tlet idx = 0\n\tlet board = []\n\tlet selected = []\n\n\tfunction reset() {\n\t\tboard = [\n\t\t\t{image: Dog, id: idx++},\n\t\t\t{image: Cat, id: idx++},\n\t\t\t{image: Fish, id: idx++},\n\t\t\t{image: Bird, id: idx++},\n\t\t\t{image: Dog, id: idx++},\n\t\t\t{image: Cat, id: idx++},\n\t\t\t{image: Fish, id: idx++},\n\t\t\t{image: Bird, id: idx++},\n\t\t]\n\t\tshuffleArray(board)\n\t\tselected = []\n\t\twaiting = false\n\t}\n\treset()\n\n\tfunction pick(card) {\n\t\tif (!board.find(c => !c.flipped)) {\n\t\t\treturn reset()\n\t\t}\n\t\tif (waiting) {\n\t\t\treturn next()\n\t\t}\n\t\tif (card.flipped) {\n\t\t\treturn\n\t\t}\n\t\tif (!board.find(c => !c.flipped)) {\n\t\t\treturn\n\t\t}\n\n\t\tcard.flipped = true\n\t\tselected = [...selected, card]\n\n\t\tif (selected.length === 2) {\n\t\t\tif (selected[0].image === selected[1].image) {\n\t\t\t\tselected = []\n\t\t\t} else {\n\t\t\t\twaiting = true\n\t\t\t}\n\t\t}\n\n\t\tboard = board\n\t}\n\n\tfunction next() {\n\t\twaiting = false\n\t\tselected.forEach(c => c.flipped = false)\n\t\tselected = []\n\t\tboard = board\n\t}\n</script>\n\n<main>\n\t{#each board as card}\n\t<a on:click={() => pick(card)}>\n\t\t<Card isFlipped={card.flipped}>\n\t\t\t<svelte:component this={card.image}/>\n\t\t</Card>\n\t</a>\n\t{/each}\n</main>\n\n<style>\n\tmain {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tpadding: 1em;\n\n\t\tdisplay: grid;\n\t\tgrid-gap: 1rem;\n\t\tgrid-template-columns: repeat(4, 20vw);\n\t\tgrid-template-rows: repeat(2, 20vw);\n\t}\n\n\ta {\n\t\tpadding: 1rem;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n</style>\n",
    "<style>\r\n    .container {\r\n        position: relative;\r\n        height: 100%;\r\n        width: 100%;\r\n        perspective: 600px;\r\n    }\r\n\r\n    .card {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        padding: 1rem;\r\n        border: 1px solid gray;\r\n        border-radius: 4px;\r\n        box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0,0,0,.12);\r\n    }\r\n\r\n    .card.front {\r\n        background-color: white;\r\n    }\r\n\r\n    .card.back {\r\n        background-color: lightblue;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export let isFlipped = false\r\n\r\n    function turn(node, {\r\n        delay = 0,\r\n        duration = 500\r\n    }) {\r\n        return {\r\n            delay,\r\n            duration,\r\n            css: (t, u) => `transform: rotateY(${1 - (u * 180)}deg); opacity: ${1 - u};`\r\n        };\r\n    }\r\n</script>\r\n\r\n<div class=\"container\">\r\n    {#if isFlipped}\r\n    <div class=\"card front\" transition:turn>\r\n        <slot/>\r\n    </div>\r\n    {:else}\r\n        <div class=\"card back\" transition:turn></div>\r\n    {/if}\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAsFC,IAAI,eAAC,CAAC,AACL,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,CAEZ,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CACtC,kBAAkB,CAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,AACpC,CAAC,AAED,CAAC,eAAC,CAAC,AACF,OAAO,CAAE,IAAI,AACd,CAAC;ACrGE,UAAU,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,KAAK,AACtB,CAAC,AAED,KAAK,cAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACvH,CAAC,AAED,KAAK,MAAM,cAAC,CAAC,AACT,gBAAgB,CAAE,KAAK,AAC3B,CAAC,AAED,KAAK,KAAK,cAAC,CAAC,AACR,gBAAgB,CAAE,SAAS,AAC/B,CAAC"
}