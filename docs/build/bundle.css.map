{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Card.svelte",
    "..\\..\\Game.svelte",
    "..\\..\\Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import Game from \"./Game.svelte\";\r\n\r\n    let playing = false;\r\n    let numPlayers\r\n\r\n    // warn before leaving\r\n    window.onbeforeunload = () => true;\r\n\r\n    function start(nPlayers) {\r\n        numPlayers = nPlayers\r\n        playing = true\r\n    }\r\n</script>\r\n\r\n{#if !playing}\r\n    <h1>Memory</h1>\r\n\r\n    <h2>Choose players</h2>\r\n\r\n    <div>\r\n        <button on:click={() => start(1)}>1</button>\r\n        <button on:click={() => start(2)}>2</button>\r\n        <button on:click={() => start(3)}>3</button>\r\n        <button on:click={() => start(4)}>4</button>\r\n    </div>\r\n{:else}\r\n    <Game {numPlayers}/>\r\n{/if}\r\n\r\n<style>\r\n    h1 {\r\n        font-size: 4rem;\r\n    }\r\n\r\n    h2 {\r\n        font-size: 2rem;\r\n    }\r\n\r\n    div {\r\n        display: grid;\r\n        grid-template-columns: repeat(4, 1fr);\r\n        grid-gap: 1rem;\r\n    }\r\n\r\n    span {\r\n        display: flex;\r\n        align-content: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    button {\r\n        border-radius: 4px;\r\n        padding: 1rem;\r\n        font-size: 4rem;\r\n    }\r\n</style>",
    "<style>\r\n    .container {\r\n        position: relative;\r\n        height: 100%;\r\n        width: 100%;\r\n        perspective: 600px;\r\n    }\r\n\r\n    .card {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: 1px solid gray;\r\n        border-radius: 4px;\r\n        box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0,0,0,.12);\r\n    }\r\n\r\n    .card.front {\r\n        background-color: white;\r\n    }\r\n\r\n    .card.back {\r\n        background-color: lightblue;\r\n        color: #636363;\r\n        line-height: 21vmin;\r\n        font-size: 21vmin;\r\n        text-align: center;\r\n        vertical-align: center;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export let isFlipped = false\r\n\r\n    function turn(node, {\r\n        delay = 0,\r\n        duration = 500\r\n    }) {\r\n        return {\r\n            delay,\r\n            duration,\r\n            css: (t, u) => `transform: rotateY(${1 - (u * 180)}deg); opacity: ${1 - u};`\r\n        };\r\n    }\r\n</script>\r\n\r\n<div class=\"container\">\r\n    {#if isFlipped}\r\n    <div class=\"card front\" transition:turn>\r\n        <slot/>\r\n    </div>\r\n    {:else}\r\n    <div class=\"card back\" transition:turn>\r\n        <slot/>\r\n    </div>\r\n    {/if}\r\n</div>\r\n",
    "<script>\r\n\timport Dog from \"./icons/Dog.svelte\";\r\n\timport Card from \"./Card.svelte\";\r\n\timport Cat from \"./icons/Cat.svelte\";\r\n\timport Fish from \"./icons/Fish.svelte\";\r\n\timport Bird from \"./icons/Bird.svelte\";\r\n\timport Lion from \"./icons/Lion.svelte\";\r\n\timport Snake from \"./icons/Snake.svelte\";\r\n\timport Chicken from \"./icons/Chicken.svelte\";\r\n\timport Monkey from \"./icons/Monkey.svelte\";\r\n\timport Mouse from \"./icons/Mouse.svelte\";\r\n\timport {onDestroy, onMount} from \"svelte\";\r\n\timport Modal from \"./Modal.svelte\";\r\n\r\n\t/* Randomize array in-place using Durstenfeld shuffle algorithm */\r\n\tfunction shuffleArray(array) {\r\n\t\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\tconst temp = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\texport let numPlayers = 1\r\n\r\n\tlet curPlayer = 0\r\n\tlet scores = []\r\n\tfor (let i = 0; i < numPlayers; i++) {\r\n\t\tscores.push(0)\r\n\t}\r\n\tlet waiting = false\r\n\tlet idx = 0\r\n\tlet board = []\r\n\tlet selected = []\r\n\r\n\tfunction reset() {\r\n\t\tboard = [\r\n\t\t\t{image: Dog, id: idx++},\r\n\t\t\t{image: Dog, id: idx++},\r\n\t\t\t{image: Cat, id: idx++},\r\n\t\t\t{image: Cat, id: idx++},\r\n\t\t\t{image: Fish, id: idx++},\r\n\t\t\t{image: Fish, id: idx++},\r\n\t\t\t{image: Bird, id: idx++},\r\n\t\t\t{image: Bird, id: idx++},\r\n\t\t\t{image: Lion, id: idx++},\r\n\t\t\t{image: Lion, id: idx++},\r\n\t\t\t{image: Snake, id: idx++},\r\n\t\t\t{image: Snake, id: idx++},\r\n\t\t\t{image: Monkey, id: idx++},\r\n\t\t\t{image: Monkey, id: idx++},\r\n\t\t\t{image: Chicken, id: idx++},\r\n\t\t\t{image: Chicken, id: idx++},\r\n\t\t\t{image: Mouse, id: idx++},\r\n\t\t\t{image: Mouse, id: idx++},\r\n\t\t]\r\n\t\tshuffleArray(board)\r\n\t\tselected = []\r\n\t\twaiting = false\r\n\t}\r\n\r\n\treset()\r\n\r\n\tfunction pick(card) {\r\n\t\tif (!board.find(c => !c.flipped)) {\r\n\t\t\treturn reset()\r\n\t\t}\r\n\t\tif (waiting) {\r\n\t\t\treturn next()\r\n\t\t}\r\n\t\tif (card.flipped) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!board.find(c => !c.flipped)) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tcard.flipped = true\r\n\t\tselected = [...selected, card]\r\n\r\n\t\tif (selected.length === 2) {\r\n\t\t\tif (selected[0].image === selected[1].image) {\r\n\t\t\t\tscores[curPlayer] += 1\r\n\t\t\t\tscores = scores\r\n\t\t\t\tselected = []\r\n\t\t\t} else {\r\n\t\t\t\twaiting = true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tboard = board\r\n\t}\r\n\r\n\tfunction next() {\r\n\t\tcurPlayer += 1\r\n\t\tif (curPlayer >= numPlayers) {\r\n\t\t\tcurPlayer = 0\r\n\t\t}\r\n\t\twaiting = false\r\n\t\tselected.forEach(c => c.flipped = false)\r\n\t\tselected = []\r\n\t\tboard = board\r\n\t}\r\n\r\n\tconst letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\r\n\r\n\tlet listener\r\n\tonMount(() => {\r\n\t\tlistener = window.addEventListener('keypress', e => {\r\n\t\t\tconst i = letters.findIndex(l => l === e.key.toUpperCase())\r\n\t\t\tpick(board[i])\r\n\t\t})\r\n\t})\r\n\r\n\tonDestroy(() => {\r\n\t\twindow.removeEventListener('keypress', listener)\r\n\t})\r\n\r\n\t$: gameOver = board.filter(card => !card.flipped).length === 0\r\n</script>\r\n\r\n<main>\r\n\t{#each board as card, index}\r\n\t<a on:mousedown|preventDefault={() => pick(card)} on:touchstart|preventDefault={() => pick(card)}>\r\n\t\t<Card isFlipped={card.flipped}>\r\n\t\t\t{#if card.flipped}\r\n\t\t\t<svelte:component this={card.image}/>\r\n\t\t\t{:else}\r\n\t\t\t{letters[index]}\r\n\t\t\t{/if}\r\n\t\t</Card>\r\n\t</a>\r\n\t{/each}\r\n</main>\r\n\r\n<aside>Player {curPlayer+1} - Score: {scores[curPlayer]}</aside>\r\n\r\n{#if gameOver}\r\n\t<Modal on:close=\"{() => reset()}\" class=\"modal\">\r\n\t\t<h2 slot=\"header\">\r\n\t\t\tGame Over\r\n\t\t</h2>\r\n\r\n\t\t<ul>\r\n\t\t{#each scores as score, index}\r\n\t\t\t<li>Player {index+1} - {score}</li>\r\n\t\t{/each}\r\n\t\t</ul>\r\n\t</Modal>\r\n{/if}\r\n\r\n<footer>\r\n\tIcons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\r\n</footer>\r\n\r\n<style>\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-content: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\ta {\r\n\t\twidth: 23vmin;\r\n\t\theight: 23vmin;\r\n\t\tmargin-right: 1rem;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\r\n\taside {\r\n\t\tposition: fixed;\r\n\t\tright: 10px;\r\n\t\tbottom: 10px;\r\n\t}\r\n\r\n\tfooter {\r\n\t\tmargin-top: -1rem;\r\n\t\topacity: .8;\r\n\t\tfont-size: .75rem;\r\n\t}\r\n\r\n\th1 {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 4em;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\th2 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 2em;\r\n\t\tcolor: #3e3e3e;\r\n\t\ttext-align: center;\r\n\t\tborder-bottom: 1px solid #c6c5c5;\r\n\t\tpadding-bottom: 1rem;\r\n\t}\r\n\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tfont-size: 2em;\r\n\t}\r\n\r\n</style>\r\n",
    "<script>\r\n    import { createEventDispatcher, onDestroy } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n    const close = () => dispatch('close');\r\n\r\n    let modal;\r\n</script>\r\n\r\n<div class=\"modal-background\" on:click={close}></div>\r\n\r\n<div class=\"modal\" role=\"dialog\" aria-modal=\"true\" bind:this={modal}>\r\n    <slot name=\"header\"></slot>\r\n    <slot></slot>\r\n    <div class=\"actions\">\r\n        <button on:click={close}>shuffle and restart</button>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .modal-background {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: rgba(0,0,0,0.3);\r\n    }\r\n\r\n    .modal {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        width: calc(100vw - 4em);\r\n        max-width: 32em;\r\n        max-height: calc(100vh - 4em);\r\n        overflow: auto;\r\n        transform: translate(-50%,-50%);\r\n        padding: .25rem 1rem;\r\n        border-radius: 0.2em;\r\n        background: white;\r\n    }\r\n\r\n    button {\r\n        display: block;\r\n        font-size: 2em;\r\n        padding: .25em .5em;\r\n    }\r\n\r\n    .actions {\r\n        display: flex;\r\n        justify-content: end;\r\n    }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}